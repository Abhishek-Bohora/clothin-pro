@model ClothingPro.BusinessLayer.DTO.StockDTO

@{
    ViewData["Title"] = "Product Details";
}

<style>
    #mainImage {
        position: relative;
        overflow: hidden;
    }

        #mainImage img {
            width: 100%;
            height: 400px;
            object-fit: cover;
        }

    .thumbnail {
        width: 100%;
        height: 100px;
        object-fit: cover;
        cursor: pointer;
        transition: opacity 0.3s;
    }

        .thumbnail:hover {
            opacity: 0.7;
        }

    .carousel-control {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 10px;
        text-decoration: none;
        font-size: 24px;
    }

        .carousel-control.left {
            left: 10px;
        }

        .carousel-control.right {
            right: 10px;
        }

    .product-info {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 5px;
    }

    .price {
        font-size: 24px;
        color: #007bff;
        font-weight: bold;
    }

    .thumbnail-container {
        position: relative;
        overflow: hidden;
    }

    .thumbnail-scroll {
        display: flex;
        overflow-x: auto;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none;
    }

        .thumbnail-scroll::-webkit-scrollbar { /* WebKit */
            width: 0;
            height: 0;
        }

    .thumbnail-item {
        flex: 0 0 auto;
        width: 100px;
        margin-right: 10px;
    }

    .thumbnail {
        width: 100%;
        height: 100px;
        object-fit: cover;
        cursor: pointer;
        transition: opacity 0.3s;
    }

        .thumbnail:hover {
            opacity: 0.7;
        }

    .thumbnail-scroll-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        z-index: 1;
    }

        .thumbnail-scroll-btn.left {
            left: 0;
        }

        .thumbnail-scroll-btn.right {
            right: 0;
        }

    .nav-tabs .nav-link {
        color: #495057;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
    }

        .nav-tabs .nav-link.active {
            color: #495057;
            background-color: #fff;
            border-color: #dee2e6 #dee2e6 #fff;
        }

    .tab-content {
        border: 1px solid #dee2e6;
        border-top: none;
        padding: 20px;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const mainImage = document.querySelector('#mainImage img');
        const thumbnails = document.querySelectorAll('.thumbnail');
        const prevButton = document.querySelector('.carousel-control.left');
        const nextButton = document.querySelector('.carousel-control.right');
        let currentIndex = 0;

        function updateMainImage(index) {
            mainImage.src = thumbnails[index].src;
            mainImage.alt = thumbnails[index].alt;
            currentIndex = index;
        }

        thumbnails.forEach((thumbnail, index) => {
            thumbnail.addEventListener('click', function () {
                updateMainImage(index);
            });
        });

        prevButton.addEventListener('click', function (e) {
            e.preventDefault();
            currentIndex = (currentIndex - 1 + thumbnails.length) % thumbnails.length;
            updateMainImage(currentIndex);
        });

        nextButton.addEventListener('click', function (e) {
            e.preventDefault();
            currentIndex = (currentIndex + 1) % thumbnails.length;
            updateMainImage(currentIndex);
        });

        //tabs functionality
        const tabLinks = document.querySelectorAll('.nav-link');
        const tabContents = document.querySelectorAll('.tab-pane');

        tabLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const tabId = link.getAttribute('href');

                tabLinks.forEach(l => l.classList.remove('active'));
                tabContents.forEach(c => c.classList.remove('show', 'active'));

                link.classList.add('active');
                document.querySelector(tabId).classList.add('show', 'active');
            });
        });


    });


</script>

<div class="container mt-5">
    <div class="row">
        <!-- Left column with product image -->
        <div class="col-md-6">
            <div id="mainImage">
                @if (!string.IsNullOrEmpty(Model.StImage))
                {
                    var images = Model.StImage.Split(';');
                    <img id="stimageindividual" src="@images[0]" class="img-fluid" alt="@Model.StName">
                }
                <a href="#" class="carousel-control left">&lsaquo;</a>
                <a href="#" class="carousel-control right">&rsaquo;</a>
                <input type="hidden" asp-for="StId" />
            </div>
            <div class="thumbnail-container mt-3">
                <button class="thumbnail-scroll-btn left">&lt;</button>
                <div class="thumbnail-scroll" id="thumbnails">
                    @if (!string.IsNullOrEmpty(Model.StImage))
                    {
                        var images = Model.StImage.Split(';');
                        foreach (var image in images)
                        {
                            <div class="col-4">
                                <img id="stimagelist" src="@image" class="img-fluid thumbnail" alt="@Model.StName">
                            </div>
                        }
                    }
                </div>
                <button class="thumbnail-scroll-btn right">&gt;</button>
            </div>
        </div>

        <!-- Right column with product details -->
        <div class="col-md-6">
            <div class="product-info">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#">HOME</a></li>
                        <li class="breadcrumb-item"><a href="#">@Model.StName</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.StName</li>
                    </ol>
                </nav>
                <h1 id="stockname">@Model.StName</h1>
                <p id="stockcode" class="price">@Model.StCode</p>
                <p id="stockdes">@Model.StDes</p>
                <p>We take a minimum of 10 pieces for order.</p>

                <p class="mt-3 mb-1"><strong>Categories:</strong> @(Model.StIsShirt == 1 ? "Shirts" : "") @(Model.StIsPant == 1 ? "Pants" : "") @(Model.StIsOther == 1 ? "Other" : "")</p>
                <p><strong>Tags:</strong> @Model.StColour, @Model.StSize</p>
                <div class="social-buttons mt-3">
                    <!-- Add your social sharing buttons here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Tabs Section -->
    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs" id="productTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="description-tab" data-toggle="tab" href="#description" role="tab">Description</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="reviews-tab" data-toggle="tab" href="#reviews" role="tab">Reviews (0)</a>
                </li>
            </ul>
            <div class="tab-content" id="productTabsContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel">
                    <h3>Product Features:</h3>
                    <ul>
                        <li>@Model.StDes</li>
                        @if (!string.IsNullOrEmpty(Model.StColour))
                        {
                            <li>Available colors:
                                @{
                                    var colors = Model.StColour.Split(';');
                                    // var color = colors[0];
                                    foreach (var color in colors)
                                    {
                                        <li style="background-color:@color;height:20px;width:20px"></li>

                                    }

                                }
                            </li>
                        }
                        @if (!string.IsNullOrEmpty(Model.StSize))
                        {
                            <li>Available sizes: @Model.StSize</li>
                        }
                        @if (!string.IsNullOrEmpty(Model.StHSCode))
                        {
                            <li>HS Code: @Model.StHSCode</li>
                        }
                    </ul>
                    <h3>Material/care instructions:</h3>
                    <ul>
                        <li>Please refer to the product label for care instructions.</li>
                    </ul>
                </div>
                <div class="tab-pane fade" id="reviews" role="tabpanel">
                    <p>There are no reviews yet.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products Section -->

</div>
<script src="~/js/stock.js"></script>